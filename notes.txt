WHAT IS NESTJS?
1- It is for building efficient, scalable nodejs server side applications.
2- It uses progressive javascript, and supports typescript.
3-It combines elements of OOP, FP and FRP(Functional Reactive Programming).

FEATURES OF NESTJS
1-Nestjs was created to help developers create monoliths and microservices.
2-It's simple to use, quick to learn and easy to apply.
3- It leverages Typescript - strongly typed language which is a superset of javascript.
4- Powerful cli to boost productivity and ease of development.
5- It supports dozens of nest-specific modules that help you easlity integarte with common technologies concepts like Type ORM, Mongoose, GraphQL, Logging, Validation, Caching, WebSockets and much more.
6- Easy unit-testing applications.
7- Great documentation.
8- Built for large scale enterprise applications.

THREE MAIN COMPONENTS OF NESTJS

1- Controllers
2- Providers
3- Modules

FOLDER/DIRECTORY STRUCTURE

1-Package.json - similar to one in react, contains lots of scripts, and dependencies
2-tsconfig.json - Typscript Configuration. We all know that nestjs has the power of nodejs and typescript. 
3-nest-cli.json - whenever you use nest command, nest cli json will create different files in src directory. 
4-prettierrc, gitnore, eslintrc.js - common things
5-Test directory - contains jest ztesting framework.
6-src directory - Like react starts with index.js, nest also starts with main.ts
   i) main.ts - to load the app.module and start the server
   ii) app.module.ts - Simple class. Whenever you want to create any js class as module,    then add @Module() decorator to it.
   iii) app.controller.ts - Normal class. But to make it as a controller, just add the   @Controller()   decorator. 
   iv) app.service.ts - Normal class with decorator @Injectable()
These controllers, add meta data to the class and defines the purpose of that class.
   v) app.controller.spec.ts - testing file for this app.controller.ts

Hello world is comming from app.service.ts.
Restart the server - use this command :---->> npm run start:dev

WHAT IS NEST MODULES?

1- @Module should come from @nestjs/common
2-  Pass an empty object inside it, to make it as a module.
     Example :- @Module({})
3- A class annotated/decorated with @Module() decorator.
4- Each app has a root module.Which Nest uses as a starting point to resolve the      application's structure and relationships.
5- It's highly recommended to use multiple modules to organize your application components.
6- The @Module() decorator provides metadata that Nest makes use of to organize the application structure.



APPLICATION MODULE - Root module
Note: In app module we have to register all other modules of our nest js application.

1-Users Module
2- Orders Module
3- Chat Module
4- Feature Module 1
5- Feature Module 2
6- Feature Module 3


NEST CONTROLLERS

1-Controllers purpose is to receive specific requests for the application.
2-Controller then handles the request and returns the appropriate response.


NEST CLI

1- it is an awesome tool that will help you to do the below tasks:-
     i) Create the custom controller
    ii) Create the custom module
    iii) Update the app module by registering the custom modules
 with the command 
nest g controller controller_name
nest g module module_name







